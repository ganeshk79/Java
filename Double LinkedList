import java.util.Scanner;

class Link
{
	  Scanner sc = new  Scanner(System.in);
	  class Node
	  {
	    	int data;
	    	Node next;
		    Node prev;
		    Node(int data)
		    {
			      this.data = data;
			      this.next = null;
			      this.prev = null;
		    }	
	}

	public static Node head = null;
	public static Node first =null;
	
  public void addNode(int data)
	{
	  	Node newNode =new Node(data);
		  if(head==null)
		  {
			  head=newNode;
			  first=newNode;
	  	}
		  else
		  {
			  first.next=newNode;
			  newNode.prev=first;
			  first=newNode;
		  }
	}
	void display()
	{
		  Node temp = head;
		  if(temp==null)
		  {
			  System.out.println("List is Empty");
		  }	
		  else
		  {
			  System.out.println("\n Displaying the Linkedlist\n");
			  while(temp.next!=null)
			  {
				  System.out.print(temp.data+"->");
				  temp=temp.next;
			  }
			  System.out.println(temp.data);
		  }
	}
	void reverseDisplay()
	{
		  Node temp=first;
		  if(temp!=null)
		  {
			  System.out.println("List is Empty");
		  }
		  else
		  {
			  System.out.println("Diplaying from back");
		  	while(temp.prev!=null)
			  {
				  System.out.println(temp.data+"->");
				  temp=temp.prev;
			  }
			  System.out.println(temp.data);
		  }		
	}
	public void create()
	{		
		Link obj = new Link();
		System.out.println("\nEnter at the end -99");
		System.out.print("Enter the number:");
		int a=sc.nextInt();
		while(a!=-99)
		{
			obj.addNode(a);
			System.out.print("Enter the number:");
			a=sc.nextInt();
		}
	}	

	public void insert()
	{
		int ch;
		Node temp = head;
		System.out.println("Enter the Element");
		int x = sc.nextInt();
		Node newNode =new Node(x);
		System.out.println("\n Enter the insert number:");
		System.out.println("\n1.at begining\n2. at end\n3. at given position");
		ch = sc.nextInt();
		switch(ch)
	    {
			case 1:
				newNode.next = head;
				head = newNode;
				break;
			case 2:
				first.next=newNode;
				newNode.prev=first;
				first =newNode;
				break;
	    case 3:
	    	System.out.println("\nEnter the position to insert:");
	    	int pos =sc.nextInt();
	        if (pos == 1)
	        {
	            newNode.next = head;
	            head = newNode;
	        }
	        else
	        {
	            for (int i = 1; i < pos - 1; i++)
	            {
	                temp = temp.next;
	            }
	            newNode.prev = temp;
	            newNode.next = temp.next;
	            temp.next.prev= newNode;
	            temp.next = newNode;
	        }
	        break;
	    default:
	    	System.out.println("Invalid! Enter the number(1,2,3,4)");
	        break;
	    }
		
	}
	public void delete()
	{
		int ch;
		Node temp = head;
		System.out.println("\\nEnter the insert number:");
		System.out.println("\n1.at begining\n2. at end\n3. at given position");
		ch = sc.nextInt();
		switch(ch)
	 {
			case 1:
				head = head.next;
				head.prev =null;
				System.out.println("Removed Element is:"+temp.data);
				temp.next=null;
				break;
			case 2:
				System.out.println("Removed Element is:"+first.data);
				first =first.prev;
				first.next=null;
				break;
	    case 3:
	    	System.out.println("\nEnter the position to delete:");
	    	int pos =sc.nextInt();
	        if (pos == 1)
	        {
	        	head = head.next;
				      head.prev =null;
				      System.out.println("Removed Element is:"+temp.data);
				temp.next=null;
	        }	
	        else
	        {
	        	 for (int i = 1; i < pos - 1; i++)
		            {
		                temp = temp.next;
		            }
		           
		            temp.next.next.prev=temp ;
		            temp.next = temp.next.next;
	        }
	        break;
	    default:
	    	System.out.println("Invalid! Enter the number(1,2,3,4)");
	        break;
	    }
		
		
	}
}
public class DoubleLinkedList {

	public static void main(String[] args)
	{
		Link ob = new Link();
		ob.create();
		int x;
		boolean c=true;
		while(c)
		{
			System.out.println("***Menu*****");
			System.out.println("1.insert\n 2.delete\n 3.display \n4.reverseDiplay \n5.exit");
			System.out.println("Enter a number :");
			try (Scanner s = new  Scanner(System.in)) {
				x = s.nextInt();
			}
			switch(x)
			{
				case 1:
					ob.insert();
					break;
				case 2:
					ob.delete();
					break;
				case 3:
					ob.display();
					break;
				case 4:
					ob.reverseDisplay();
					break;
				case 5:
					c=false;
					break;
				default:
					System.out.println("Invalid! Enter the number(1,2,3,4)");
					break;
			}
		}
		
	}

}
